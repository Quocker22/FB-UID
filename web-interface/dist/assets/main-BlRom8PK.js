var e=Object.defineProperty,t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,i=(t,n,s)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[n]=s,a=(e,a)=>{for(var o in a||(a={}))n.call(a,o)&&i(e,o,a[o]);if(t)for(var o of t(a))s.call(a,o)&&i(e,o,a[o]);return e},o=(e,t,n)=>new Promise(((s,i)=>{var a=e=>{try{l(n.next(e))}catch(t){i(t)}},o=e=>{try{l(n.throw(e))}catch(t){i(t)}},l=e=>e.done?s(e.value):Promise.resolve(e.value).then(a,o);l((n=n.apply(e,t)).next())}));!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const n of e)if("childList"===n.type)for(const e of n.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();class l{constructor(){this.themeToggle=document.getElementById("theme-toggle"),this.init()}init(){this.loadSavedTheme(),this.bindEvents()}loadSavedTheme(){"dark"===localStorage.getItem("theme")?this.setDarkTheme():this.setLightTheme()}setDarkTheme(){document.documentElement.setAttribute("data-theme","dark"),localStorage.setItem("theme","dark"),this.themeToggle&&(this.themeToggle.innerHTML='<i class="fas fa-sun"></i>')}setLightTheme(){document.documentElement.setAttribute("data-theme","light"),localStorage.setItem("theme","light"),this.themeToggle&&(this.themeToggle.innerHTML='<i class="fas fa-moon"></i>')}toggleTheme(){"dark"===document.documentElement.getAttribute("data-theme")?this.setLightTheme():this.setDarkTheme()}bindEvents(){this.themeToggle&&this.themeToggle.addEventListener("click",(()=>{this.toggleTheme()}))}}const d={API_URL:"https://upload.thtmmo.com/",BATCH_DELAY:1e3,SUPPORTED_PLATFORMS:[{name:"YouTube",icon:"fab fa-youtube"},{name:"TikTok",icon:"fab fa-tiktok"},{name:"Instagram",icon:"fab fa-instagram"},{name:"Twitter",icon:"fab fa-twitter"},{name:"Facebook",icon:"fab fa-facebook"},{name:"Twitch",icon:"fab fa-twitch"},{name:"Vimeo",icon:"fab fa-vimeo"},{name:"SoundCloud",icon:"fab fa-soundcloud"},{name:"Reddit",icon:"fab fa-reddit"},{name:"Pinterest",icon:"fab fa-pinterest"},{name:"Tumblr",icon:"fab fa-tumblr"},{name:"Bilibili"},{name:"Bluesky"},{name:"Dailymotion"},{name:"Loom"},{name:"OK.ru"},{name:"Rutube"},{name:"Snapchat"},{name:"Streamable"},{name:"VK"},{name:"Xiaohongshu"}],DEFAULT_OPTIONS:{audioBitrate:"128",audioFormat:"mp3",downloadMode:"auto",filenameStyle:"basic",videoQuality:"max",disableMetadata:!1,youtubeVideoCodec:"h264",youtubeDubLang:"",convertGif:!0,allowH265:!1,tiktokFullAudio:!1,youtubeBetterAudio:!1,youtubeHLS:!1},OPTION_LABELS:{audioBitrate:{320:"320 kbps (Chất lượng cao nhất)",256:"256 kbps (Chất lượng cao)",128:"128 kbps (Cân bằng)",96:"96 kbps (Nhẹ)",64:"64 kbps (Rất nhẹ)",8:"8 kbps (Tối thiểu)"},audioFormat:{best:"Tốt nhất",mp3:"MP3",ogg:"OGG",wav:"WAV",opus:"OPUS"},downloadMode:{auto:"Tự động",audio:"Chỉ âm thanh",mute:"Video im lặng"},filenameStyle:{classic:"Cổ điển",pretty:"Đẹp",basic:"Cơ bản",nerdy:"Chi tiết"},videoQuality:{max:"Tối đa",4320:"4K (4320p)",2160:"4K (2160p)",1440:"2K (1440p)",1080:"Full HD (1080p)",720:"HD (720p)",480:"SD (480p)",360:"360p",240:"240p",144:"144p"},youtubeVideoCodec:{h264:"H.264 (Tương thích cao)",av1:"AV1 (Hiệu quả)",vp9:"VP9 (Cân bằng)"}}},r={"error.api.youtube.login":"Video yêu cầu đăng nhập YouTube","error.api.invalid_body":"URL không hợp lệ","error.api.fetch.empty_response":"Không thể lấy dữ liệu video","error.api.content.too_long":"Video quá dài",default:"Lỗi không xác định"};class c{constructor(){this.baseUrl=d.API_URL,this.authToken=null}setAuthToken(e,t="Api-Key"){this.authToken=`${t} ${e}`}clearAuth(){this.authToken=null}processUrl(e){return o(this,arguments,(function*(e,t={}){const n=["url","videoQuality","downloadMode","filenameStyle"],s=a(a({},d.DEFAULT_OPTIONS),t),i={url:e};Object.keys(s).forEach((e=>{if(n.includes(e)){const t=s[e];""!==t&&null!=t&&(i[e]=t)}}));const o={Accept:"application/json","Content-Type":"application/json",Origin:window.location.origin};this.authToken&&(o.Authorization=this.authToken);const l=yield fetch(this.baseUrl,{method:"POST",headers:o,body:JSON.stringify(i)});if(!l.ok){if(429===l.status){const e=l.headers.get("Retry-After");throw new Error(`Rate limit exceeded. Retry after ${e} seconds.`)}throw new Error(`${l.status} ${l.statusText}`)}return yield l.json()}))}getInstanceInfo(){return o(this,null,(function*(){const e=yield fetch(this.baseUrl,{method:"GET",headers:{Accept:"application/json"}});if(!e.ok)throw new Error(`${e.status} ${e.statusText}`);return yield e.json()}))}createSession(e){return o(this,null,(function*(){const t=yield fetch(`${this.baseUrl}session`,{method:"POST",headers:{Accept:"application/json","cf-turnstile-response":e}});if(!t.ok)throw new Error(`${t.status} ${t.statusText}`);const n=yield t.json();return n.token&&this.setAuthToken(n.token,"Bearer"),n}))}downloadFile(e){return o(this,null,(function*(){const t=yield fetch(e);if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return t}))}}function u(e){if(0===e)return"0 B";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(2))+" "+["B","KB","MB","GB"][t]}function h(e){return new Promise((t=>setTimeout(t,e)))}function m(e){return e.split(/[,\n\r]+/).map((e=>e.trim())).filter((e=>e&&function(e){try{return new URL(e),!0}catch(t){return!1}}(e)))}class g{constructor(){this.activeDownloads=new Map,this.downloadInfo=new Map}downloadWithProgress(e,t){return o(this,null,(function*(){try{const s=this.createProgressUI(e,t);try{yield this.downloadFileWithProgress(e,t,s)}catch(n){if("FALLBACK_NEEDED"!==n.message)throw n;this.updateProgressUI(s,{status:"Chuyển sang chế độ đơn giản..."}),yield this.downloadFileSimple(e,t,s)}}catch(s){this.showDownloadError(s.message)}}))}createProgressUI(e,t){const n="progress-"+Date.now(),s=document.getElementById("download-result"),i=`\n            <div id="${n}" class="bg-[#FFF8E7] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center mb-3">\n                    <i class="fas fa-download text-[#4A7043] mr-2"></i>\n                    <span class="font-bold text-[#4A7043] truncate">${t||"download"}</span>\n                </div>\n                \n                <div class="mb-3">\n                    <div class="flex justify-between text-sm text-[#8B5A2B] mb-1">\n                        <span id="${n}-status">Đang chuẩn bị...</span>\n                        <span id="${n}-percent">0%</span>\n                    </div>\n                    <div class="w-full bg-[#E5D5C8] rounded-full h-2">\n                        <div id="${n}-bar" class="bg-[#8B5A2B] h-2 rounded-full transition-all duration-300" style="width: 0%"></div>\n                    </div>\n                </div>\n                \n                <div class="flex justify-between text-xs text-[#8B5A2B]">\n                    <span id="${n}-downloaded">0 kB</span>\n                    <span id="${n}-total">-- kB</span>\n                    <span id="${n}-speed">-- kB/s</span>\n                </div>\n                \n                <button id="${n}-cancel" class="btn btn-sm bg-[#C94C4C] text-white hover:bg-[#A73D3D] rounded-lg border-none mt-2">\n                    <i class="fas fa-times mr-1"></i> Hủy\n                </button>\n                \n                <button id="${n}-retry" class="btn btn-sm bg-[#8B5A2B] text-white hover:bg-[#6F4A22] rounded-lg border-none mt-2 ml-2 hidden">\n                    <i class="fas fa-redo mr-1"></i> Tải lại\n                </button>\n            </div>\n        `;return s.innerHTML=i,this.downloadInfo=this.downloadInfo||new Map,this.downloadInfo.set(n,{url:e,filename:t}),document.getElementById(`${n}-cancel`).addEventListener("click",(()=>{this.cancelDownload(n)})),document.getElementById(`${n}-retry`).addEventListener("click",(()=>{this.retryDownload(n)})),n}downloadFileWithProgress(e,t,n){return o(this,null,(function*(){try{const s=yield fetch(e,{method:"GET",mode:"cors",credentials:"omit",headers:{Accept:"*/*"}});if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const i=s.headers.get("content-length"),a=i?parseInt(i,10):0;if(this.updateProgressUI(n,{status:"Đang tải xuống...",total:a}),!s.body)throw new Error("STREAM_NOT_SUPPORTED");const o=s.body.getReader(),l=[];let d=0,r=Date.now(),c=r;for(this.activeDownloads.set(n,{reader:o,cancelled:!1});;){const{done:e,value:t}=yield o.read(),s=this.activeDownloads.get(n);if(null==s?void 0:s.cancelled)throw new Error("Tải xuống đã bị hủy");if(e)break;if(t&&t.length>0){l.push(t),d+=t.length;const e=Date.now();if(e-c>200){const t=d/((e-r)/1e3);this.updateProgressUI(n,{downloaded:d,total:a,speed:t,percent:a>0?d/a*100:0}),c=e}}}if(0===d)throw new Error("EMPTY_DOWNLOAD");const u=new Blob(l);if(0===u.size)throw new Error("Downloaded file is empty (0 bytes)");const h=window.URL.createObjectURL(u);this.updateProgressUI(n,{status:"Hoàn thành!",downloaded:u.size,total:u.size,percent:100});const m=document.createElement("a");m.href=h,m.download=t||"download",document.body.appendChild(m),m.click(),document.body.removeChild(m),window.URL.revokeObjectURL(h),this.activeDownloads.delete(n),setTimeout((()=>{this.updateProgressUI(n,{status:"✅ Tải xuống thành công!",showSuccess:!0})}),500)}catch(s){if("STREAM_NOT_SUPPORTED"===s.message||"EMPTY_DOWNLOAD"===s.message)throw new Error("FALLBACK_NEEDED");throw this.updateProgressUI(n,{status:"❌ Lỗi: "+s.message,showError:!0}),this.activeDownloads.delete(n),s}}))}downloadFileSimple(e,t,n){return o(this,null,(function*(){try{this.updateProgressUI(n,{status:"Đang tải xuống (chế độ đơn giản)...",total:0});const s=yield fetch(e);if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const i=yield s.blob(),a=window.URL.createObjectURL(i);this.updateProgressUI(n,{status:"Hoàn thành!",downloaded:i.size,total:i.size,percent:100});const o=document.createElement("a");o.href=a,o.download=t||"download",document.body.appendChild(o),o.click(),document.body.removeChild(o),window.URL.revokeObjectURL(a),setTimeout((()=>{this.updateProgressUI(n,{status:"✅ Tải xuống thành công!",showSuccess:!0})}),500)}catch(s){throw s}}))}updateProgressUI(e,t){const n=document.getElementById(`${e}-status`),s=document.getElementById(`${e}-percent`),i=document.getElementById(`${e}-bar`),a=document.getElementById(`${e}-downloaded`),o=document.getElementById(`${e}-total`),l=document.getElementById(`${e}-speed`),d=document.getElementById(`${e}-cancel`),r=document.getElementById(`${e}-retry`);if(t.status&&n&&(n.textContent=t.status),void 0!==t.percent&&s&&i){const e=Math.round(t.percent);s.textContent=`${e}%`,i.style.width=`${e}%`}void 0!==t.downloaded&&a&&(a.textContent=u(t.downloaded)),void 0!==t.total&&o&&(o.textContent=t.total>0?u(t.total):"-- kB"),void 0!==t.speed&&l&&(l.textContent=`${u(t.speed)}/s`),t.showSuccess&&d&&r&&(d.innerHTML='<i class="fas fa-check mr-1"></i> Hoàn thành',d.className="btn btn-sm bg-[#4A7043] text-white rounded-lg border-none mt-2",d.disabled=!0,r.innerHTML='<i class="fas fa-redo mr-1"></i> Tải lại',r.className="retry-button mt-2 ml-2",r.classList.remove("hidden")),t.showError&&d&&r&&(d.innerHTML='<i class="fas fa-times mr-1"></i> Đóng',d.className="btn btn-sm bg-[#C94C4C] text-white rounded-lg border-none mt-2",r.innerHTML='<i class="fas fa-redo mr-1"></i> Thử lại',r.className="retry-button mt-2 ml-2",r.classList.remove("hidden"))}retryDownload(e){const t=this.downloadInfo.get(e);if(t){this.updateProgressUI(e,{status:"Đang chuẩn bị...",percent:0,downloaded:0,total:0,speed:0});const n=document.getElementById(`${e}-cancel`),s=document.getElementById(`${e}-retry`);n&&(n.innerHTML='<i class="fas fa-times mr-1"></i> Hủy',n.className="btn btn-sm bg-[#C94C4C] text-white hover:bg-[#A73D3D] rounded-lg border-none mt-2",n.disabled=!1),s&&s.classList.add("hidden"),this.downloadFileWithProgress(t.url,t.filename,e)}}cancelDownload(e){var t;const n=this.activeDownloads.get(e);n&&(n.cancelled=!0,null==(t=n.reader)||t.cancel(),this.activeDownloads.delete(e),this.updateProgressUI(e,{status:"❌ Đã hủy",showError:!0}))}formatBytes(e){if(0===e)return"0 B";const t=Math.floor(Math.log(e)/Math.log(1024));return parseFloat((e/Math.pow(1024,t)).toFixed(1))+" "+["B","kB","MB","GB"][t]}showDownloadError(e){document.getElementById("download-result").innerHTML=`\n            <div class="bg-[#FFF8E7] p-4 rounded-xl border border-[#C94C4C] mb-4">\n                <div class="flex items-center mb-2">\n                    <i class="fas fa-exclamation-triangle text-[#C94C4C] mr-2"></i>\n                    <span class="font-bold text-[#C94C4C]">Lỗi tải xuống</span>\n                </div>\n                <p class="text-sm text-[#8B5A2B]">${e}</p>\n            </div>\n        `}downloadDirect(e,t){const n=document.createElement("a");n.href=e,n.download=t||"video.mp4",n.style.display="none",document.body.appendChild(n),n.click(),document.body.removeChild(n)}}class p{constructor(){this.isVisible=!1,this.currentData=null}show(e){this.currentData=e,this.createPickerUI();document.getElementById("picker-modal").style.display="flex",this.isVisible=!0}hide(){const e=document.getElementById("picker-modal");e&&(e.style.display="none"),this.isVisible=!1,this.currentData=null}createPickerUI(){const e=`\n            <div id="picker-modal" class="download-progress-modal">\n                <div class="modal-backdrop"></div>\n                <div class="modal-content" style="max-width: 800px; max-height: 80vh;">\n                    <div class="modal-header">\n                        <h3><i class="fas fa-images mr-2"></i>Chọn file để tải</h3>\n                        <button class="close-btn" id="close-picker">\n                            <i class="fas fa-times"></i>\n                        </button>\n                    </div>\n                    <div class="modal-body" style="max-height: 60vh; overflow-y: auto;">\n                        ${this.createPickerContent()}\n                    </div>\n                </div>\n            </div>\n        `,t=document.getElementById("picker-modal");t&&t.remove(),document.body.insertAdjacentHTML("beforeend",e),this.bindPickerEvents()}createPickerContent(){if(!this.currentData||!this.currentData.picker)return"<p>Không có dữ liệu để hiển thị.</p>";let e="";this.currentData.audio&&(e+=`\n                <div class="picker-section">\n                    <h4 class="picker-section-title">\n                        <i class="fas fa-music mr-2"></i>Âm thanh chung\n                    </h4>\n                    <div class="picker-item audio-item">\n                        <div class="picker-item-info">\n                            <i class="fas fa-music text-2xl"></i>\n                            <div class="picker-item-details">\n                                <div class="picker-item-title">${this.currentData.audioFilename||"Audio Background"}</div>\n                                <div class="picker-item-type">Âm thanh</div>\n                            </div>\n                        </div>\n                        <button class="download-picker-btn" data-url="${this.currentData.audio}" data-filename="${this.currentData.audioFilename||"audio"}">\n                            <i class="fas fa-download mr-2"></i>Tải xuống\n                        </button>\n                    </div>\n                </div>\n            `);const t=this.groupItemsByType(this.currentData.picker);return Object.entries(t).forEach((([t,n])=>{const s=this.getTypeInfo(t);e+=`\n                <div class="picker-section">\n                    <h4 class="picker-section-title">\n                        <i class="${s.icon} mr-2"></i>${s.label} (${n.length})\n                    </h4>\n                    <div class="picker-grid">\n                        ${n.map(((e,n)=>this.createPickerItem(e,n,t))).join("")}\n                    </div>\n                </div>\n            `})),e+=this.createBulkDownloadSection(),e}groupItemsByType(e){const t={};return e.forEach((e=>{const n=e.type||"unknown";t[n]||(t[n]=[]),t[n].push(e)})),t}getTypeInfo(e){const t={photo:{icon:"fas fa-image",label:"Hình ảnh"},video:{icon:"fas fa-video",label:"Video"},gif:{icon:"fas fa-file-image",label:"GIF"},unknown:{icon:"fas fa-file",label:"Khác"}};return t[e]||t.unknown}createPickerItem(e,t,n){const s=this.getTypeInfo(n),i=this.generateFilename(e,t,n);return`\n            <div class="picker-item">\n                <div class="picker-preview">\n                    ${e.thumb?`<img src="${e.thumb}" alt="Preview" class="picker-thumbnail" loading="lazy">`:`<div class="picker-placeholder">\n                            <i class="${s.icon} text-2xl"></i>\n                        </div>`}\n                    <div class="picker-overlay">\n                        <button class="picker-preview-btn" data-url="${e.url}" title="Xem trước">\n                            <i class="fas fa-eye"></i>\n                        </button>\n                    </div>\n                </div>\n                <div class="picker-item-info">\n                    <div class="picker-item-title">${i}</div>\n                    <div class="picker-item-type">${s.label}</div>\n                </div>\n                <button class="download-picker-btn" data-url="${e.url}" data-filename="${i}">\n                    <i class="fas fa-download mr-1"></i>Tải\n                </button>\n            </div>\n        `}generateFilename(e,t,n){const s=this.getFileExtension(n);return`${n}_${t+1}_${(new Date).getTime()}.${s}`}getFileExtension(e){return{photo:"jpg",video:"mp4",gif:"gif"}[e]||"bin"}createBulkDownloadSection(){return!this.currentData.picker||this.currentData.picker.length<=1?"":'\n            <div class="picker-section">\n                <h4 class="picker-section-title">\n                    <i class="fas fa-download mr-2"></i>Tải hàng loạt\n                </h4>\n                <div class="bulk-download-options">\n                    <button class="bulk-download-btn" id="download-all-photos">\n                        <i class="fas fa-images mr-2"></i>Tải tất cả hình ảnh\n                    </button>\n                    <button class="bulk-download-btn" id="download-all-videos">\n                        <i class="fas fa-video mr-2"></i>Tải tất cả video\n                    </button>\n                    <button class="bulk-download-btn" id="download-all-items">\n                        <i class="fas fa-download mr-2"></i>Tải tất cả\n                    </button>\n                </div>\n            </div>\n        '}bindPickerEvents(){const e=document.getElementById("picker-modal");[document.getElementById("close-picker"),e.querySelector(".modal-backdrop")].forEach((e=>{e.addEventListener("click",(()=>this.hide()))})),e.querySelectorAll(".download-picker-btn").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.closest(".download-picker-btn").dataset.url,n=e.target.closest(".download-picker-btn").dataset.filename;this.downloadFile(t,n)}))})),e.querySelectorAll(".picker-preview-btn").forEach((e=>{e.addEventListener("click",(e=>{const t=e.target.closest(".picker-preview-btn").dataset.url;this.previewFile(t)}))}));const t=document.getElementById("download-all-photos"),n=document.getElementById("download-all-videos"),s=document.getElementById("download-all-items");t&&t.addEventListener("click",(()=>{this.bulkDownload("photo")})),n&&n.addEventListener("click",(()=>{this.bulkDownload("video")})),s&&s.addEventListener("click",(()=>{this.bulkDownload("all")}))}downloadFile(e,t){return o(this,null,(function*(){try{const n=document.createElement("a");n.href=e,n.download=t,n.target="_blank",document.body.appendChild(n),n.click(),document.body.removeChild(n)}catch(n){alert("Lỗi khi tải file: "+n.message)}}))}previewFile(e){window.open(e,"_blank")}bulkDownload(e){return o(this,null,(function*(){if(!this.currentData.picker)return;let t=this.currentData.picker;if("all"!==e&&(t=this.currentData.picker.filter((t=>t.type===e))),0===t.length)return void alert("Không có file nào để tải.");const n=document.getElementById("picker-modal");if(n){let t=[];if("all"===e)t=Array.from(n.querySelectorAll(".download-picker-btn"));else{n.querySelectorAll(".picker-section").forEach((n=>{const s=n.querySelector(".picker-section-title");if(s){const i=s.textContent.toLowerCase();if("photo"===e&&i.includes("hình ảnh")||"video"===e&&i.includes("video")||"gif"===e&&i.includes("gif")){const e=Array.from(n.querySelectorAll(".download-picker-btn"));t.push(...e)}}}))}t.forEach(((e,t)=>{setTimeout((()=>{e.click()}),300*t)})),setTimeout((()=>{this.hide()}),500)}}))}}class b{constructor(){this.apiService=new c,this.downloadManager=new g,this.pickerModal=new p}process(e){return o(this,arguments,(function*(e,t={}){this.showLoading(),this.hideError(),this.clearResult();try{const n=yield this.apiService.processUrl(e,a({},t));if(this.hideLoading(),!n)return void this.showError("Không nhận được dữ liệu từ API");this.handleApiResponse(n)}catch(n){this.hideLoading(),this.showError(`Không thể kết nối đến API: ${n.message}. Vui lòng đảm bảo API đang chạy.`)}}))}handleApiResponse(e){if(document.getElementById("result-container").classList.remove("hidden"),e&&e.status)switch(e.status){case"tunnel":case"redirect":this.handleDownloadLink(e);break;case"local-processing":this.handleLocalProcessing(e);break;case"picker":this.handlePickerResponse(e);break;case"error":this.handleErrorResponse(e);break;default:this.showError(`Phản hồi không xác định từ API: ${e.status}`)}else this.showError("Phản hồi không hợp lệ từ API")}handleDownloadLink(e){const{url:t,filename:n}=e;if(!t)return void this.showError("URL tải xuống không hợp lệ");const s=document.getElementById("download-result");s.classList.remove("hidden"),s.innerHTML=`\n            <div class="bg-[#FFF8E7] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center mb-2">\n                    <i class="fas fa-file-video text-[#4A7043] mr-2 text-xl"></i>\n                    <p class="font-bold text-[#4A7043] truncate">${n||"download"}</p>\n                </div>\n                \n                <div class="flex flex-col space-y-2">\n                    <button id="progress-download" class="btn bg-[#8B5A2B] text-white hover:bg-[#6F4A22] rounded-xl border-none transition transform hover:scale-105">\n                        <i class="fas fa-download mr-2"></i> Tải xuống\n                    </button>\n                </div>\n            </div>\n        `,document.getElementById("progress-download").addEventListener("click",(()=>{this.downloadManager.downloadWithProgress(t,n)}))}handleLocalProcessing(e){const t=document.getElementById("download-result");t.classList.remove("hidden"),t.innerHTML=`\n            <div class="bg-[#FFF8E7] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center mb-3">\n                    <i class="fas fa-cogs text-[#4A7043] mr-2 text-xl"></i>\n                    <p class="font-bold text-[#4A7043]">Xử lý Local được yêu cầu</p>\n                </div>\n                \n                <div class="text-sm text-[#8B5A2B] mb-3">\n                    <p><strong>Loại xử lý:</strong> ${e.type}</p>\n                    <p><strong>Dịch vụ:</strong> ${e.service}</p>\n                    ${e.isHLS?"<p><strong>Định dạng:</strong> HLS</p>":""}\n                </div>\n                \n                <div class="bg-[#C94C4C] text-white p-3 rounded-lg text-sm">\n                    <i class="fas fa-exclamation-triangle mr-2"></i>\n                    Tính năng xử lý local chưa được hỗ trợ trong phiên bản web này. \n                    Bạn cần sử dụng client desktop hoặc CLI của Cobalt.\n                </div>\n            </div>\n        `}handlePickerResponse(e){if(!e.picker||0===e.picker.length)return void this.showError("Không có option nào để tải xuống");if(1===e.picker.length)return void this.handleDownloadLink(e.picker[0]);const t=this.findBestQuality(e.picker);t?this.showPickerWithBestOption(e,t):this.pickerModal.show(e)}findBestQuality(e){if(!e||0===e.length)return null;return e.slice().sort(((e,t)=>{const n=(e.filename||e.url||"").match(/\d+/g)||[],s=(t.filename||t.url||"").match(/\d+/g)||[],i=n.length>0?Math.max(...n.map((e=>parseInt(e)))):0;return(s.length>0?Math.max(...s.map((e=>parseInt(e)))):0)-i}))[0]}showPickerWithBestOption(e,t){const n=document.getElementById("download-result");n.classList.remove("hidden"),n.innerHTML=`\n            <div class="bg-[#FFF8E7] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center mb-3">\n                    <i class="fas fa-video text-[#4A7043] mr-2 text-xl"></i>\n                    <h3 class="font-bold text-[#4A7043]">Chọn chất lượng tải xuống</h3>\n                </div>\n                \n                <div class="mb-4">\n                    <p class="text-sm text-[#8B5A2B] mb-2">Đề xuất (chất lượng tốt nhất):</p>\n                    <div class="bg-[#E5D5C8] p-3 rounded-lg border-2 border-[#8B5A2B]">\n                        <div class="flex items-center justify-between">\n                            <span class="font-medium text-[#4A7043]">${t.filename||"Video chất lượng cao"}</span>\n                            <button class="btn btn-sm bg-[#8B5A2B] text-white hover:bg-[#6F4A22] rounded-lg border-none" \n                                    onclick="window.singleProcessor.handleDownloadLink(${JSON.stringify(t).replace(/"/g,"&quot;")})">\n                                <i class="fas fa-download mr-1"></i> Tải xuống\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="border-t border-[#8B5A2B] border-opacity-30 pt-3">\n                    <p class="text-sm text-[#8B5A2B] mb-2">Tất cả các tùy chọn:</p>\n                    <button class="btn btn-sm bg-[#4A7043] text-white hover:bg-[#3A5734] rounded-lg border-none" \n                            onclick="window.pickerModal.show(${JSON.stringify(e).replace(/"/g,"&quot;")})">\n                        <i class="fas fa-list mr-1"></i> Xem tất cả (${e.picker.length} tùy chọn)\n                    </button>\n                </div>\n            </div>\n        `,window.pickerModal=this.pickerModal,window.singleProcessor=this}handleErrorResponse(e){let t=this.getErrorMessage(e.error);e.error&&"error.api.youtube.login"===e.error.code?t="Video yêu cầu đăng nhập YouTube (có thể bị giới hạn độ tuổi hoặc riêng tư). Hãy thử với video công khai.":e.error&&"error.api.invalid_body"===e.error.code&&(t="Lỗi cấu trúc dữ liệu gửi đi. Vui lòng chỉ nhập URL và thử lại."),this.showError(t)}getErrorMessage(e){return e&&e.code?r[e.code]||`Lỗi: ${e.code}`:r.default}showLoading(){const e=document.getElementById("result-container"),t=document.getElementById("loading");e.classList.remove("hidden"),t.classList.remove("hidden")}hideLoading(){document.getElementById("loading").classList.add("hidden")}showError(e){const t=document.getElementById("error-container"),n=document.getElementById("error-message");t.classList.remove("hidden"),n.textContent=e}hideError(){document.getElementById("error-container").classList.add("hidden")}clearResult(){document.getElementById("download-result").innerHTML=""}}class f{constructor(){this.settings=this.loadSettings(),this.isVisible=!1}loadSettings(){const e=localStorage.getItem("cobalt-settings");if(e)try{return a(a({},d.DEFAULT_OPTIONS),JSON.parse(e))}catch(t){}return a({},d.DEFAULT_OPTIONS)}saveSettings(){localStorage.setItem("cobalt-settings",JSON.stringify(this.settings))}getSettings(){return a({},this.settings)}updateSetting(e,t){this.settings[e]=t,this.saveSettings()}resetSettings(){this.settings=a({},d.DEFAULT_OPTIONS),this.saveSettings(),this.updateUI()}resetToDefaults(){this.resetSettings()}createSettingsUI(){const e=document.getElementById("settings-modal");if(!e)return;const t=`\n            <div class="settings-content">\n                <div class="settings-header">\n                    <h2 class="settings-title">\n                        <i class="fas fa-cog mr-2"></i>Cài đặt tải xuống\n                    </h2>\n                    <button class="settings-close" id="close-settings">\n                        <i class="fas fa-times"></i>\n                    </button>\n                </div>\n\n                <div class="settings-tab-content active" id="tab-general">\n                    <div class="settings-group">\n                        <div class="settings-field">\n                            <label class="settings-label">Chất lượng video:</label>\n                            <div class="radio-buttons-group compact" id="videoQuality-group">\n                                <label class="radio-button ${"max"===this.settings.videoQuality?"active":""}" data-value="max">\n                                    <input type="radio" name="videoQuality" value="max" ${"max"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-crown"></i>\n                                        <span>Tối đa</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"2160"===this.settings.videoQuality?"active":""}" data-value="2160">\n                                    <input type="radio" name="videoQuality" value="2160" ${"2160"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-gem"></i>\n                                        <span>4K</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"1440"===this.settings.videoQuality?"active":""}" data-value="1440">\n                                    <input type="radio" name="videoQuality" value="1440" ${"1440"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-medal"></i>\n                                        <span>2K</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"1080"===this.settings.videoQuality?"active":""}" data-value="1080">\n                                    <input type="radio" name="videoQuality" value="1080" ${"1080"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-star"></i>\n                                        <span>1080p</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"720"===this.settings.videoQuality?"active":""}" data-value="720">\n                                    <input type="radio" name="videoQuality" value="720" ${"720"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-circle"></i>\n                                        <span>720p</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"480"===this.settings.videoQuality?"active":""}" data-value="480">\n                                    <input type="radio" name="videoQuality" value="480" ${"480"===this.settings.videoQuality?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-dot-circle"></i>\n                                        <span>480p</span>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n\n                        <div class="settings-field">\n                            <label class="settings-label">Chế độ tải:</label>\n                            <div class="radio-buttons-group compact" id="downloadMode-group">\n                                <label class="radio-button ${"auto"===this.settings.downloadMode?"active":""}" data-value="auto">\n                                    <input type="radio" name="downloadMode" value="auto" ${"auto"===this.settings.downloadMode?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-video"></i>\n                                        <span>Video + Âm thanh</span>\n                                        <small>Tự động</small>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"audio"===this.settings.downloadMode?"active":""}" data-value="audio">\n                                    <input type="radio" name="downloadMode" value="audio" ${"audio"===this.settings.downloadMode?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-music"></i>\n                                        <span>Chỉ âm thanh</span>\n                                        <small>Audio only</small>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"mute"===this.settings.downloadMode?"active":""}" data-value="mute">\n                                    <input type="radio" name="downloadMode" value="mute" ${"mute"===this.settings.downloadMode?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-video-slash"></i>\n                                        <span>Chỉ video</span>\n                                        <small>No audio</small>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n\n                        <div class="settings-field">\n                            <label class="settings-label">Kiểu tên file:</label>\n                            <div class="radio-buttons-group compact" id="filenameStyle-group">\n                                <label class="radio-button ${"classic"===this.settings.filenameStyle?"active":""}" data-value="classic">\n                                    <input type="radio" name="filenameStyle" value="classic" ${"classic"===this.settings.filenameStyle?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-clock"></i>\n                                        <span>Cổ điển</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"pretty"===this.settings.filenameStyle?"active":""}" data-value="pretty">\n                                    <input type="radio" name="filenameStyle" value="pretty" ${"pretty"===this.settings.filenameStyle?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-heart"></i>\n                                        <span>Đẹp</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"basic"===this.settings.filenameStyle?"active":""}" data-value="basic">\n                                    <input type="radio" name="filenameStyle" value="basic" ${"basic"===this.settings.filenameStyle?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-file"></i>\n                                        <span>Cơ bản</span>\n                                    </div>\n                                </label>\n                                <label class="radio-button ${"nerdy"===this.settings.filenameStyle?"active":""}" data-value="nerdy">\n                                    <input type="radio" name="filenameStyle" value="nerdy" ${"nerdy"===this.settings.filenameStyle?"checked":""} style="display: none;">\n                                    <div class="radio-content">\n                                        <i class="fas fa-code"></i>\n                                        <span>Chi tiết</span>\n                                    </div>\n                                </label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="settings-actions">\n                    <button class="settings-reset" id="reset-settings">\n                        <i class="fas fa-undo mr-1"></i>Đặt lại mặc định\n                    </button>\n                    <button class="settings-save" id="save-settings">\n                        <i class="fas fa-save mr-1"></i>Lưu cài đặt\n                    </button>\n                </div>\n            </div>\n        `;e.innerHTML=t,this.bindEvents()}createOptions(e){const t=d.OPTION_LABELS[e];return t?Object.entries(t).map((([t,n])=>`<option value="${t}" ${this.settings[e]===t?"selected":""}>${n}</option>`)).join(""):""}bindEvents(){const e=document.getElementById("settings-modal");if(!e)return;const t=document.getElementById("close-settings"),n=document.getElementById("save-settings"),s=document.getElementById("reset-settings");null==t||t.addEventListener("click",(()=>this.hideSettings())),e.addEventListener("click",(t=>{t.target===e&&this.hideSettings()})),null==n||n.addEventListener("click",(()=>{this.saveCurrentSettings(),this.hideSettings()})),null==s||s.addEventListener("click",(()=>{this.resetToDefaults()}));const i=e.querySelectorAll(".settings-tab"),a=e.querySelectorAll(".settings-tab-content");i.forEach((e=>{e.addEventListener("click",(()=>{var t;const n=e.dataset.tab;i.forEach((e=>e.classList.remove("active"))),e.classList.add("active"),a.forEach((e=>e.classList.remove("active"))),null==(t=document.getElementById(`tab-${n}`))||t.classList.add("active")}))})),e.querySelectorAll('select, input[type="text"]').forEach((e=>{e.addEventListener("change",(()=>{this.updateSetting(e.id,e.value)}))})),e.querySelectorAll('input[type="checkbox"]').forEach((e=>{e.addEventListener("change",(()=>{this.updateSetting(e.id,e.checked)}))})),e.querySelectorAll(".radio-buttons-group").forEach((e=>{const t=e.querySelectorAll(".radio-button");t.forEach((n=>{n.addEventListener("click",(()=>{const s=n.dataset.value,i=e.id.replace("-group","");t.forEach((e=>e.classList.remove("active"))),n.classList.add("active");const a=n.querySelector('input[type="radio"]');a&&(a.checked=!0),this.updateSetting(i,s)}))}))}))}saveCurrentSettings(){const e=document.getElementById("settings-modal");e&&(e.querySelectorAll('select, input[type="text"]').forEach((e=>{""!==e.value&&(this.settings[e.id]=e.value)})),e.querySelectorAll('input[type="checkbox"]').forEach((e=>{this.settings[e.id]=e.checked})),e.querySelectorAll(".radio-buttons-group").forEach((e=>{const t=e.id.replace("-group",""),n=e.querySelector('input[type="radio"]:checked');n&&(this.settings[t]=n.value)})),this.saveSettings())}updateUI(){const e=document.getElementById("settings-modal");e&&(e.querySelectorAll('select, input[type="text"]').forEach((e=>{void 0!==this.settings[e.id]&&(e.value=this.settings[e.id])})),e.querySelectorAll('input[type="checkbox"]').forEach((e=>{void 0!==this.settings[e.id]&&(e.checked=this.settings[e.id])})),e.querySelectorAll(".radio-buttons-group").forEach((e=>{const t=e.id.replace("-group",""),n=this.settings[t];if(void 0!==n){e.querySelectorAll(".radio-button").forEach((e=>{e.classList.remove("active")}));const t=e.querySelector(`[data-value="${n}"]`);if(t){t.classList.add("active");const e=t.querySelector('input[type="radio"]');e&&(e.checked=!0)}}})))}showSettings(){this.createSettingsUI();const e=document.getElementById("settings-modal");e&&(e.classList.add("show"),this.isVisible=!0)}hideSettings(){const e=document.getElementById("settings-modal");e&&(e.classList.remove("show"),this.isVisible=!1)}toggleSettings(){this.isVisible?this.hideSettings():this.showSettings()}}class v{constructor(){this.apiService=new c,this.downloadManager=new g,this.settingsManager=new f,this.isProcessing=!1,this.results=[],this.batchDownloadInfo=new Map}processBatch(e){return o(this,null,(function*(){if(!this.isProcessing){this.isProcessing=!0,this.results=[],this.initBatchUI(e);for(let n=0;n<e.length;n++){const s=e[n],i=`batch-item-${n}`;try{this.updateItemStatus(i,"loading","Đang xử lý...");const e=this.settingsManager.getSettings(),t=yield this.apiService.processUrl(s,e);this.results.push({url:s,result:t,status:"success"}),"error"===t.status?this.updateItemStatus(i,"error",this.getErrorMessage(t.error)):(this.updateItemStatus(i,"success","Thành công"),this.addDownloadButtons(i,t))}catch(t){this.results.push({url:s,error:t.message,status:"error"}),this.updateItemStatus(i,"error",`Lỗi: ${t.message}`)}n<e.length-1&&(yield h(d.BATCH_DELAY))}this.isProcessing=!1,this.updateSummary()}}))}initBatchUI(e){const t=document.getElementById("download-result");let n=`\n            <div class="bg-[#FFF8E7] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center justify-between mb-4">\n                    <h3 class="font-bold text-[#4A7043] text-lg">\n                        <i class="fas fa-list mr-2"></i>Xử lý hàng loạt (${e.length} video)\n                    </h3>\n                    <div class="flex items-center space-x-3">\n                        <div id="batch-summary" class="text-sm text-[#8B5A2B]">\n                            Đang xử lý...\n                        </div>\n                        <button id="download-all-btn" class="btn btn-sm bg-[#4A7043] text-white hover:bg-[#3A5A35] rounded-lg border-none hidden">\n                            <i class="fas fa-download mr-1"></i>Tải tất cả\n                        </button>\n                    </div>\n                </div>\n                <div class="space-y-3">\n        `;e.forEach(((e,t)=>{n+=`\n                <div id="batch-item-${t}" class="bg-[#EDE4E0] p-3 rounded-lg border border-[#8B5A2B] border-opacity-30">\n                    <div class="flex items-center justify-between mb-2">\n                        <div class="flex items-center">\n                            <div class="batch-status-icon mr-2">\n                                <i class="fas fa-clock text-[#8B5A2B]"></i>\n                            </div>\n                            <span class="font-medium text-[#4A7043] text-sm">Video ${t+1}</span>\n                        </div>\n                        <div class="batch-status-text text-sm text-[#8B5A2B]">\n                            Chờ xử lý...\n                        </div>\n                    </div>\n                    <div class="text-xs text-gray-600 mb-2 truncate">${e}</div>\n                    <div class="batch-download-buttons hidden">\n                        \x3c!-- Buttons sẽ được thêm sau khi xử lý thành công --\x3e\n                    </div>\n                </div>\n            `})),n+="\n                </div>\n            </div>\n        ",t.innerHTML=n,this.setupDownloadAllButton()}updateItemStatus(e,t,n){const s=document.getElementById(e);if(!s)return;const i=s.querySelector(".batch-status-icon i"),a=s.querySelector(".batch-status-text");switch(i.className="",t){case"loading":i.className="fas fa-spinner fa-spin text-[#F4A261]";break;case"success":i.className="fas fa-check-circle text-green-600";break;case"error":i.className="fas fa-exclamation-circle text-red-600"}a.textContent=n,a.className="batch-status-text text-sm "+("error"===t?"text-red-600":"success"===t?"text-green-600":"text-[#8B5A2B]")}addDownloadButtons(e,t){const n=document.getElementById(e);if(!n)return;const s=n.querySelector(".batch-download-buttons");if(!s)return;let i=t;"picker"===t.status&&t.picker&&t.picker.length>0&&(i=t.picker[0]);const{url:a,filename:o}=i;if(!a)return;s.innerHTML=`\n            <div class="flex flex-col space-y-2 mt-2">\n                <div class="text-xs font-medium text-[#4A7043] truncate overflow-hidden" title="${o||"video"}">\n                    ${o||"video"}\n                </div>\n                <div class="flex space-x-2">\n                    <button class="progress-download-btn btn md:btn-sm bg-[#8B5A2B] text-white hover:bg-[#6F4A22] rounded-lg border-none flex-1">\n                        <i class="fas fa-download mr-1"></i> Tải xuống\n                    </button>\n                </div>\n            </div>\n        `,s.classList.remove("hidden");s.querySelector(".progress-download-btn").addEventListener("click",(()=>{this.showProgressInBatchItem(e,a,o)}))}updateSummary(){const e=document.getElementById("batch-summary"),t=document.getElementById("download-all-btn");if(!e)return;const n=this.results.length,s=this.results.filter((e=>"success"===e.status&&(!e.result||"error"!==e.result.status))).length,i=n-s;e.innerHTML=`\n            <div class="flex items-center space-x-3">\n                <span class="text-green-600"><i class="fas fa-check mr-1"></i>${s}</span>\n                <span class="text-red-600"><i class="fas fa-times mr-1"></i>${i}</span>\n                <span class="text-[#8B5A2B]">Hoàn thành</span>\n            </div>\n        `,t&&s>0&&(t.classList.remove("hidden"),t.textContent=`Tải tất cả (${s})`,t.innerHTML=`<i class="fas fa-download mr-1"></i>Tải tất cả (${s})`)}getErrorMessage(e){return e&&e.code?r[e.code]||`Lỗi: ${e.code}`:r.default}reset(){this.isProcessing=!1,this.results=[]}showProgressInBatchItem(e,t,n){const s=document.getElementById(e);if(!s)return;const i=`batch-progress-${Date.now()}-${Math.random().toString(36).substr(2,9)}`;s.innerHTML=`\n            <div class="flex items-center justify-between mb-2">\n                <div class="flex items-center min-w-0 flex-1 text-overflow-container">\n                    <div class="mr-2 flex-shrink-0">\n                        <i class="fas fa-download text-[#8B5A2B]"></i>\n                    </div>\n                    <span class="font-medium text-[#4A7043] text-sm progress-filename" title="${n||"video"}">${n||"video"}</span>\n                </div>\n                <span id="${i}-percent" class="text-sm text-[#8B5A2B] flex-shrink-0 ml-2">0%</span>\n            </div>\n            \n            <div class="mb-2">\n                <div class="flex justify-between text-xs text-[#8B5A2B] mb-1">\n                    <span id="${i}-status">Đang chuẩn bị...</span>\n                    <span id="${i}-speed">-- kB/s</span>\n                </div>\n                <div class="w-full bg-[#E5D5C8] rounded-full h-2">\n                    <div id="${i}-bar" class="bg-[#8B5A2B] h-2 rounded-full transition-all duration-300" style="width: 0%"></div>\n                </div>\n            </div>\n            \n            <div class="flex justify-between text-xs text-[#8B5A2B] mb-2">\n                <span id="${i}-downloaded">0 kB</span>\n                <span id="${i}-total">-- kB</span>\n            </div>\n            \n            <button id="${i}-cancel" class="btn btn-xs bg-[#C94C4C] text-white hover:bg-[#A73D3D] rounded border-none">\n                <i class="fas fa-times mr-1"></i> Hủy\n            </button>\n            \n            <button id="${i}-retry" class="retry-button ml-2 hidden">\n                <i class="fas fa-redo mr-1"></i> Tải lại\n            </button>\n        `,this.batchDownloadInfo.set(i,{url:t,filename:n}),this.downloadWithProgressInBatch(t,n,i)}downloadWithProgressInBatch(e,t,n){return o(this,null,(function*(){try{const s=yield fetch(e);if(!s.ok)throw new Error(`HTTP ${s.status}: ${s.statusText}`);const i=s.headers.get("content-length"),a=i?parseInt(i,10):0;this.updateBatchProgressUI(n,{status:"Đang tải xuống...",total:a});const o=s.body.getReader(),l=[];let d=0,r=Date.now(),c=r;const u={reader:o,cancelled:!1},h=document.getElementById(`${n}-cancel`),m=document.getElementById(`${n}-retry`);for(h&&h.addEventListener("click",(()=>{var e;u.cancelled=!0,null==(e=u.reader)||e.cancel(),this.updateBatchProgressUI(n,{status:"❌ Đã hủy",showError:!0})})),m&&m.addEventListener("click",(()=>{this.retryBatchDownload(n)}));;){const{done:e,value:t}=yield o.read();if(u.cancelled)throw new Error("Tải xuống đã bị hủy");if(e)break;l.push(t),d+=t.length;const s=Date.now();if(s-c>200){const e=d/((s-r)/1e3);this.updateBatchProgressUI(n,{downloaded:d,total:a,speed:e,percent:a>0?d/a*100:0}),c=s}}const g=new Blob(l),p=window.URL.createObjectURL(g);this.updateBatchProgressUI(n,{status:"Hoàn thành!",downloaded:d,total:d,percent:100});const b=document.createElement("a");b.href=p,b.download=t||"download",document.body.appendChild(b),b.click(),document.body.removeChild(b),window.URL.revokeObjectURL(p),setTimeout((()=>{this.updateBatchProgressUI(n,{status:"✅ Tải xuống thành công!",showSuccess:!0})}),500)}catch(s){this.updateBatchProgressUI(n,{status:"❌ Lỗi: "+s.message,showError:!0})}}))}updateBatchProgressUI(e,t){const n=document.getElementById(`${e}-status`),s=document.getElementById(`${e}-percent`),i=document.getElementById(`${e}-bar`),a=document.getElementById(`${e}-downloaded`),o=document.getElementById(`${e}-total`),l=document.getElementById(`${e}-speed`),d=document.getElementById(`${e}-cancel`),r=document.getElementById(`${e}-retry`);if(t.status&&n&&(n.textContent=t.status),void 0!==t.percent&&s&&i){const e=Math.round(t.percent);s.textContent=`${e}%`,i.style.width=`${e}%`}void 0!==t.downloaded&&a&&(a.textContent=u(t.downloaded)),void 0!==t.total&&o&&(o.textContent=t.total>0?u(t.total):"-- kB"),void 0!==t.speed&&l&&(l.textContent=`${u(t.speed)}/s`),t.showSuccess&&d&&r&&(d.innerHTML='<i class="fas fa-check mr-1"></i> Hoàn thành',d.className="btn btn-xs bg-[#4A7043] text-white rounded border-none",d.disabled=!0,r.innerHTML='<i class="fas fa-redo mr-1"></i> Tải lại',r.className="retry-button ml-2",r.classList.remove("hidden")),t.showError&&d&&r&&(d.innerHTML='<i class="fas fa-times mr-1"></i> Đóng',d.className="btn btn-xs bg-[#C94C4C] text-white rounded border-none",r.innerHTML='<i class="fas fa-redo mr-1"></i> Thử lại',r.className="retry-button ml-2",r.classList.remove("hidden"))}retryBatchDownload(e){const t=this.batchDownloadInfo.get(e);if(t){this.updateBatchProgressUI(e,{status:"Đang chuẩn bị...",percent:0,downloaded:0,total:0,speed:0});const n=document.getElementById(`${e}-cancel`),s=document.getElementById(`${e}-retry`);n&&(n.innerHTML='<i class="fas fa-times mr-1"></i> Hủy',n.className="btn btn-xs bg-[#C94C4C] text-white hover:bg-[#A73D3D] rounded border-none",n.disabled=!1),s&&s.classList.add("hidden"),this.downloadWithProgressInBatch(t.url,t.filename,e)}}setupDownloadAllButton(){const e=document.getElementById("download-all-btn");e&&e.addEventListener("click",(()=>{this.downloadAll()}))}downloadAll(){return o(this,null,(function*(){const e=document.querySelectorAll(".progress-download-btn");if(0===e.length)return void alert("Không có video nào sẵn sàng để tải xuống!");const t=document.getElementById("download-all-btn");t&&(t.disabled=!0,t.innerHTML='<i class="fas fa-spinner fa-spin mr-1"></i>Đang bắt đầu tải...'),e.forEach(((e,t)=>{setTimeout((()=>{e.click()}),800*t)})),setTimeout((()=>{t&&(t.innerHTML='<i class="fas fa-check mr-1"></i>Đã bắt đầu tải tất cả',setTimeout((()=>{t.disabled=!1,t.innerHTML='<i class="fas fa-download mr-1"></i>Tải tất cả'}),3e3))}),800*e.length+500)}))}createDownloadAllUI(e){const t=document.getElementById("download-result");let n=`\n            <div class="bg-[#EDE4E0] p-4 rounded-xl border border-[#8B5A2B] mb-4">\n                <div class="flex items-center mb-4">\n                    <h3 class="font-bold text-[#4A7043] text-lg">\n                        <i class="fas fa-cloud-download-alt mr-2"></i>Tải xuống tất cả (${e.length} file)\n                    </h3>\n                </div>\n                <div class="space-y-2" id="download-all-container">\n        `;e.forEach(((e,t)=>{let s=e.result;"picker"===s.status&&s.picker&&s.picker.length>0&&(s=s.picker[0]),n+=`\n                <div id="download-all-${t}" class="bg-[#FFF8E7] p-3 rounded-lg border border-[#8B5A2B] border-opacity-30">\n                    <div class="flex items-center justify-between mb-2">\n                        <div class="flex items-center min-w-0 flex-1">\n                            <div class="mr-2 flex-shrink-0">\n                                <i class="fas fa-clock text-[#8B5A2B]"></i>\n                            </div>\n                            <span class="font-medium text-[#4A7043] text-sm truncate" title="${s.filename||`Video ${t+1}`}">${s.filename||`Video ${t+1}`}</span>\n                        </div>\n                        <span id="download-all-${t}-percent" class="text-sm text-[#8B5A2B] flex-shrink-0 ml-2">0%</span>\n                    </div>\n                    \n                    <div class="mb-2">\n                        <div class="flex justify-between text-xs text-[#8B5A2B] mb-1">\n                            <span id="download-all-${t}-status">Chờ tải...</span>\n                            <span id="download-all-${t}-speed">-- kB/s</span>\n                        </div>\n                        <div class="w-full bg-[#E5D5C8] rounded-full h-1.5">\n                            <div id="download-all-${t}-bar" class="bg-[#8B5A2B] h-1.5 rounded-full transition-all duration-300" style="width: 0%"></div>\n                        </div>\n                    </div>\n                    \n                    <div class="flex justify-between text-xs text-[#8B5A2B]">\n                        <span id="download-all-${t}-downloaded">0 kB</span>\n                        <span id="download-all-${t}-total">-- kB</span>\n                    </div>\n                </div>\n            `})),n+="\n                </div>\n            </div>\n        ";const s=t.querySelector(".bg-\\[\\#FFF8E7\\]");s?s.insertAdjacentHTML("beforebegin",n):t.innerHTML=n+t.innerHTML}startDownloadAllItem(e,t,n,s){return o(this,null,(function*(){try{const i=document.querySelector(`#${n} .fas`);i&&(i.className="fas fa-spinner fa-spin text-[#F4A261]");const a=yield fetch(e);if(!a.ok)throw new Error(`HTTP ${a.status}: ${a.statusText}`);const o=a.headers.get("content-length"),l=o?parseInt(o,10):0;this.updateDownloadAllProgressUI(n,{status:"Đang tải xuống...",total:l});const d=a.body.getReader(),r=[];let c=0,u=Date.now(),h=u;for(;;){const{done:e,value:t}=yield d.read();if(e)break;r.push(t),c+=t.length;const s=Date.now();if(s-h>300){const e=c/((s-u)/1e3);this.updateDownloadAllProgressUI(n,{downloaded:c,total:l,speed:e,percent:l>0?c/l*100:0}),h=s}}const m=new Blob(r),g=window.URL.createObjectURL(m);this.updateDownloadAllProgressUI(n,{status:"Hoàn thành!",downloaded:c,total:c,percent:100});const p=document.createElement("a");p.href=g,p.download=t||`video-${s}`,document.body.appendChild(p),p.click(),document.body.removeChild(p),window.URL.revokeObjectURL(g),setTimeout((()=>{this.updateDownloadAllProgressUI(n,{status:"✅ Thành công!",showSuccess:!0})}),500)}catch(i){this.updateDownloadAllProgressUI(n,{status:"❌ Lỗi: "+i.message,showError:!0})}}))}updateDownloadAllProgressUI(e,t){const n=document.getElementById(`${e}-status`),s=document.getElementById(`${e}-percent`),i=document.getElementById(`${e}-bar`),a=document.getElementById(`${e}-downloaded`),o=document.getElementById(`${e}-total`),l=document.getElementById(`${e}-speed`);if(t.status&&n&&(n.textContent=t.status),void 0!==t.percent&&s&&i){const e=Math.round(t.percent);s.textContent=`${e}%`,i.style.width=`${e}%`}if(void 0!==t.downloaded&&a&&(a.textContent=u(t.downloaded)),void 0!==t.total&&o&&(o.textContent=t.total>0?u(t.total):"-- kB"),void 0!==t.speed&&l&&(l.textContent=`${u(t.speed)}/s`),t.showSuccess){const t=document.querySelector(`#${e} .fas`);t&&(t.className="fas fa-check-circle text-green-600")}if(t.showError){const t=document.querySelector(`#${e} .fas`);t&&(t.className="fas fa-exclamation-circle text-red-600")}}}class y{constructor(){this.initElements(),this.themeManager=new l,this.settingsManager=new f,this.pickerModal=new p,this.apiService=new c,this.singleProcessor=new b,this.batchProcessor=new v,this.bindEvents(),this.initializeApp()}initElements(){this.urlInput=document.getElementById("url-input"),this.downloadBtn=document.getElementById("download-btn"),this.clearInputBtn=document.getElementById("clear-input"),this.resetBtn=document.getElementById("reset-btn"),this.resultContainer=document.getElementById("result-container"),this.downloadResult=document.getElementById("download-result"),this.errorContainer=document.getElementById("error-container"),this.errorMessage=document.getElementById("error-message")}initializeApp(){return o(this,null,(function*(){try{const e=yield this.apiService.getInstanceInfo();e.cobalt&&e.cobalt.services&&this.updateSupportedServices(e.cobalt.services),e.cobalt&&e.cobalt.turnstileSitekey&&this.setupTurnstile(e.cobalt.turnstileSitekey)}catch(e){}}))}bindEvents(){this.downloadBtn.addEventListener("click",(()=>{this.handleDownload()})),this.urlInput.addEventListener("keydown",(e=>{(e.ctrlKey||e.metaKey)&&"Enter"===e.key&&(e.preventDefault(),this.downloadBtn.click())})),this.urlInput.addEventListener("input",(()=>{""!==this.urlInput.value.trim()?this.clearInputBtn.style.opacity="1":this.clearInputBtn.style.opacity="0"})),this.clearInputBtn.addEventListener("click",(()=>{this.urlInput.value="",this.clearInputBtn.style.opacity="0",this.urlInput.focus()})),this.resetBtn.addEventListener("click",(()=>{this.reset()}));const e=document.getElementById("settings-btn");e&&e.addEventListener("click",(()=>{this.settingsManager.toggleSettings()}))}updateSupportedServices(e){}setupTurnstile(e){}handleDownload(){const e=this.urlInput.value.trim();if(!e)return void this.singleProcessor.showError("Vui lòng nhập URL để tải xuống");const t=m(e);if(0===t.length)return void this.singleProcessor.showError("Vui lòng nhập ít nhất một URL hợp lệ");const n=this.settingsManager.getSettings();1===t.length?this.singleProcessor.process(t[0],n):(this.resultContainer.classList.remove("hidden"),this.singleProcessor.hideError(),this.downloadResult.classList.remove("hidden"),this.batchProcessor.processBatch(t))}handleApiResponse(e,t,n={}){switch(e.status){case"tunnel":case"redirect":this.handleDirectDownload(e);break;case"local-processing":this.handleLocalProcessing(e);break;case"picker":this.handlePickerResponse(e);break;case"error":this.handleErrorResponse(e);break;default:this.singleProcessor.showError("Phản hồi không xác định từ API")}}handleDirectDownload(e){const t=document.createElement("a");t.href=e.url,t.download=e.filename||"download",t.target="_blank",document.body.appendChild(t),t.click(),document.body.removeChild(t)}handleLocalProcessing(e){this.singleProcessor.showError("Local processing được yêu cầu. Tính năng này chưa được hỗ trợ trong phiên bản web.")}handlePickerResponse(e){this.pickerModal.show(e)}handleErrorResponse(e){var t,n;const s=(null==(t=e.error)?void 0:t.code)||"unknown",i=null==(n=e.error)?void 0:n.context;let a=`Lỗi: ${s}`;i&&(i.service&&(a+=` (${i.service})`),i.limit&&(a+=` - Giới hạn: ${i.limit}`)),this.singleProcessor.showError(a)}reset(){this.batchProcessor.reset(),this.urlInput.value="",this.clearInputBtn.style.opacity="0",this.resultContainer.classList.add("hidden"),this.downloadResult.classList.add("hidden"),this.errorContainer.classList.add("hidden"),this.downloadResult.innerHTML="",this.errorMessage.textContent="",this.urlInput.focus()}}document.addEventListener("DOMContentLoaded",(()=>{new y}));
