server {
    listen 80;
    server_name your-domain.com;  # Thay bằng domain của bạn
    root /usr/share/nginx/html;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }

    # Handle CSS and JS files from /css/ and /js/ paths
    location /css/ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public";
    }

    location /js/ {
        try_files $uri =404;
        expires 1y;
        add_header Cache-Control "public";
    }

    # SPA fallback - redirect all routes to index.html
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Handle API requests (proxy to your Cobalt API)
    location /api/ {
        proxy_pass https://upload.thtmmo.com/;  # Thay bằng API endpoint của bạn
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # CORS headers
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Handle 404 errors
    error_page 404 /index.html;

    # Handle server errors (50x)
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Deny access to hidden files
    location ~ /\. {
        deny all;
    }

    # Deny access to backup and source files
    location ~* \.(bak|config|dist|fla|inc|ini|log|psd|sh|sql|swp)$ {
        deny all;
    }
}

# SSL configuration (recommended for production)
server {
    listen 443 ssl http2;
    server_name your-domain.com;  # Thay bằng domain của bạn
    
    # SSL certificates (sử dụng Let's Encrypt hoặc SSL cert của bạn)
    # ssl_certificate /path/to/your/certificate.crt;
    # ssl_certificate_key /path/to/your/private.key;
    
    # Include the same configuration as above
    root /usr/share/nginx/html;
    index index.html;
    
    # ... (copy all the location blocks from above)
}

# Redirect HTTP to HTTPS (for production)
# server {
#     listen 80;
#     server_name your-domain.com;
#     return 301 https://$server_name$request_uri;
# }
